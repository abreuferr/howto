#: Title : proxysql
#: Author : "Caio Abreu Ferreira" <cferreira@senhasegura.com>
#: Description : estudo sobre a tecnologia proxysql
#: Options : GNU Linux Debian 11

1. Reference

https://www.digitalocean.com/community/tutorials/how-to-configure-a-galera-cluster-with-mariadb-on-debian-10-servers

https://proxysql.com/blog/proxysql-cluster/

2. Topologia

node01 - 192.168.122.21
node02 - 192.168.122.22
node03 - 192.168.122.23

3. MariaDB

3.1. Configuração

# node01/node02/node03
#
$ sudo apt install mariadb-server -y

# script de segurança
#
$ sudo mysql_secure_installation
Enter current password for root (enter for none): <ENTER>
Switch to unix_socket authentication [Y/n] [n]
Change the root password? [Y/n] [y]
Remove anonymous users? [Y/n] [y]
Disallow root login remotely? [Y/n] [y]
Remove test database and access to it? [Y/n] [y]
Reload privilege tables now? [Y/n] [y]

$ mysql -u root -p

4. Galera Cluster

4.1. Configuração

# node01/node02/node03
#
$ sudo systemctl stop mysql
$ sudo systemctl status mysql

# node01
#
$ sudo vim /etc/mysql/mariadb.conf.d/galera.cnf
[galera]
wsrep_on                 = ON
wsrep_cluster_name       = "MariaDB Galera Cluster"
wsrep_provider           = /usr/lib/galera/libgalera_smm.so
wsrep_cluster_address    = "gcomm://"
binlog_format            = row
default_storage_engine   = InnoDB
innodb_autoinc_lock_mode = 2
bind-address = 0.0.0.0
wsrep_node_address="192.168.122.21"

# node02
#
$ sudo vim /etc/mysql/mariadb.conf.d/galera.cnf
[galera]
wsrep_on                 = ON
wsrep_cluster_name       = "MariaDB Galera Cluster"
wsrep_provider           = /usr/lib/galera/libgalera_smm.so
wsrep_cluster_address    = "gcomm://192.168.122.21,192.168.122.22,192.168.122.23"
binlog_format            = row
default_storage_engine   = InnoDB
innodb_autoinc_lock_mode = 2
bind-address             = 0.0.0.0
wsrep_node_address       ="192.168.122.22"

# node03
#
$ sudo vim /etc/mysql/mariadb.conf.d/galera.cnf
[galera]
wsrep_on                 = ON
wsrep_cluster_name       = "MariaDB Galera Cluster"
wsrep_provider           = /usr/lib/galera/libgalera_smm.so
wsrep_cluster_address    = "gcomm://192.168.122.21,192.168.122.22,192.168.122.23"
binlog_format            = row
default_storage_engine   = InnoDB
innodb_autoinc_lock_mode = 2
bind-address             = 0.0.0.0
wsrep_node_address       ="192.168.122.23"

# node01
#
$ sudo galera_new_cluster
$ mysql -u root -p -e "SHOW STATUS LIKE 'wsrep_cluster_size'"
+--------------------+-------+
| Variable_name      | Value |
+--------------------+-------+
| wsrep_cluster_size | 1     |
+--------------------+-------+

# node02
#
$ sudo systemctl start mysql
$ mysql -u root -p -e "SHOW STATUS LIKE 'wsrep_cluster_size'"
+--------------------+-------+
| Variable_name      | Value |
+--------------------+-------+
| wsrep_cluster_size | 2     |
+--------------------+-------+

# node03
#
$ sudo systemctl start mysql
$ mysql -u root -p -e "SHOW STATUS LIKE 'wsrep_cluster_size'"
+--------------------+-------+
| Variable_name      | Value |
+--------------------+-------+
| wsrep_cluster_size | 3     |
+--------------------+-------+

4.2. Teste

# node01
#
$ mysql -u root -p
MariaDB [(none)]> CREATE DATABASE galera_cluster;

# node02/node03
#
$ mysql -u root -p
MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| galera_cluster     |
| information_schema |
| mysql              |
| performance_schema |
+--------------------+

5. ProxySQL

5.1. Teoria

# 3306 - porta de acesso ao MariaDB SQL
# 6032 - porta de acesso ao SQL do proxysql para manutenção do ProxySQL.
# 6033 - a aplicação deve utilizar essa porta para acessar o ProxySQL.

# Memory – Altered when making modifications on the command-line
# Disk – used for persistent configuration changes
# Runtime – Used as the effective configuration for ProxySQL.
#
# LOAD ADMIN VARIABLES TO RUNTIME;
# SAVE ADMIN VARIABLES TO DISK;

5.2. Configuração

# node01
#
$ mysql -u root -p
MariaDB [(none)]> CREATE USER 'radmin'@'localhost' IDENTIFIED BY 'radmin';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON *.* TO 'radmin'@'localhost' WITH GRANT OPTION;
MariaDB [(none)]> CREATE USER 'radmin'@'%' IDENTIFIED BY 'radmin';
MariaDB [(none)]> GRANT ALL PRIVILEGES ON *.* TO 'radmin'@'%' WITH GRANT OPTION;
MariaDB [(none)]> FLUSH PRIVILEGES;

# node01/node02/node03
#
$ cat proxysql.cnf
datadir="/var/lib/proxysql"

# contains global variables that control the functionality of the admin interface.
#
admin_variables=
{
    admin_credentials="admin:admin;radmin:radmin;clusteradmin:clusteradmin"
    mysql_ifaces="0.0.0.0:6032"
    refresh_interval=2000
    web_enabled=true
    web_port=6080
    stats_credentials="stats:admin"

    # ProxySQL em modo cluster
    cluster_username="clusteradmin"
    cluster_password="clusteradmin"
    cluster_check_interval_ms=200
    cluster_check_status_frequency=100
    cluster_mysql_query_rules_save_to_disk=true
    cluster_mysql_servers_save_to_disk=true
    cluster_mysql_users_save_to_disk=true
    cluster_proxysql_servers_save_to_disk=true
    cluster_mysql_query_rules_diffs_before_sync=3
    cluster_mysql_servers_diffs_before_sync=3
    cluster_mysql_users_diffs_before_sync=3
    cluster_proxysql_servers_diffs_before_sync=3
}

# contains global variables that control the functionality for handling the incoming MySQL traffic.
#
mysql_variables=
{
    threads=4
    max_connections=2048
    default_query_delay=0
    default_query_timeout=36000000
    have_compress=true
    poll_timeout=2000
    interfaces="0.0.0.0:6033"
    default_schema="information_schema"
    stacksize=1048576
    server_version="5.5.30"
    connect_timeout_server=3000
    monitor_username="monitor"
    monitor_password="monitor"
    monitor_history=600000
    monitor_connect_interval=60000
    monitor_ping_interval=10000
    monitor_read_only_interval=1500
    monitor_read_only_timeout=500
    ping_interval_server_msec=120000
    ping_timeout_server=500
    commands_stats=true
    sessions_sort=true
    connect_retries_on_failure=10
}

proxysql_servers =
(
    {
        hostname="192.168.122.21"
        port=6032
        comment="proxysql-21"
    },
    {
        hostname="192.168.122.22"
        port=6032
        comment="proxysql-22"
    },
    {
        hostname="192.168.122.23"
        port=6032
        comment="proxysql-23"
    }
)


mysql_galera_hostgroups =
(
    {
		offline_hostgroup=1,
        writer_hostgroup=2,
        reader_hostgroup=3,
		backup_writer_hostgroup=4,
        active=1,
		max_writers=1,
		writer_is_also_reader=1,
		max_transactions_behind=100
    }
)

# contains rows for the mysql_servers table from the admin interface.
#
mysql_servers =
(
    { hostgroup_id=0, address="192.168.122.21", port=3306, weight=9999, port=3306, },
	{ hostgroup_id=0, address="192.168.122.22", port=3306, weight=9998, port=3306, },
	{ hostgroup_id=0, address="192.168.122.23", port=3306, weight=9998, port=3306, },

)


# contains rows for the mysql_query_rules table from the admin interface.
#
mysql_query_rules =
(
    { rule_id=1, active=1, match_digest="^SELECT.*", destination_hostgroup=1, apply=1 },
    { rule_id=2, active=1, match_digest="^SELECT.* FOR UPDATE", destination_hostgroup=0, apply=1 }
)

# defines all the MySQL users
#
mysql_users =
(
    { username="superuser-test", password="*E080671041B6AD2051D8C92B3374C4F054363BCF", default_hostgroup=0, active=1 }  
)
 
# executando o container com o proxysql
#
$ docker run --name proxysql --net=host -d -v -v$HOME/proxysql.cnf:/etc/proxysql.cnf proxysql/proxysql

# acesso remoto
#
$ mysql -h127.0.0.1 -P6032 -uradmin -pradmin --prompt "ProxySQL Admin>"

5.3. Teste

# node03
#
$ mysql -u radmin -pradmin -h 192.168.122.23
MariaDB [(none)]> create user 'superuser-test'@'%' identified by 'superuser-test';
MariaDB [(none)]> create database testdb;
MariaDB [(none)]> grant all privileges on testdb.* to 'superuser-test'@'%' with grant option;
MariaDB [(none)]> flush privileges;
MariaDB [(none)]> exit;

# node03
#
$ mysql -u radmin -pradmin -h 127.0.0.1 -P6032 --prompt='Admin> '
Admin> INSERT INTO mysql_users(username,password,default_hostgroup) VALUES ('superuser-test','superuser-test',1);
Admin> SELECT * FROM mysql_users;
Admin> LOAD MYSQL USERS TO RUNTIME;
Admin> SAVE MYSQL USERS TO DISK;

# node01/node02/node03
#
$ mysql -udemouser -h 127.0.0.1 -P6033 -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MySQL connection id is 9
Server version: 5.5.30 (ProxySQL)

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MySQL [(none)]> 
