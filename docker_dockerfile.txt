#: Title : Dockerfile
#: Author : "Caio Abreu Ferreira" <abreuferr_gmail.com>
#: Description : informacoes sobre docker e dockerfile
#: Options :
#: Reference :

DIRETORIO DE TRABALHO
#
# criacao do diretorio de trabalho
#
$ mkdir docker
$ cd docker

DOCKERFILE
#
# PRIMEIRO EXEMPLO de UM DOCKERFILE
#
# neste exemplo, sera criado um container baseado na distribuicao
# gnu/linux debian e executar o comando especificado pelo parametro RUN
#
$ vi Dockerfile
	# imagem de origem do container
	#
	FROM debian

	# Mantenedor do dockerfile
	#
	MAINTAINER Caio Ferreira

	# executar o comando
	#
	RUN /bin/echo "HELLO DOCKER"

# SEGUNDO EXEMPLO DE UM DOCKERFILE
#
# neste exemplo, sera criado um container baseado na distribuicao
# gnu/linux debian e executar o comando especificado pelo parametro RUN.
#
$ vim Dockerfile
	# imagem utilizada para contruir o contianer
	#
	FROM debian

	# mantenedor do arquivo dockerfile
	#
	MAINTAINER caio abreu ferreira

	# atualizacao do debian, instalacao do apache2, limpeza do debian
	#
	RUN apt-get update && apt-get install -y apache2 && apt-get clean && rm -rf /var/lib/apt/lists/*

	# criacao do arquivo index.html
	#
	# ira executar o comando echo dentro do container e ira criar o arquivo index.html
	RUN echo “Hello Apache server on Debian Docker” > /var/www/html/index.html

	# ira copiar o arqivo idenx.html localizado no host, localizado no mesmo diretorio
	# do arquivo Dockerfile, para o container.
	#
	ADD index.html /var/www/html/

	# ira copiar o arqivo tar.tar localizado no host, localizado no mesmo diretorio
	# do arquivo Dockerfile, para o container e ira desempacotar o arquivo tar.tar
	#
	ADD tar.tar /var/www/html/

	# variaveis de ambiente utilizadas pelo apache3
	#
	ENV APACHE_RUN_USER www-data
	ENV APACHE_RUN_GROUP www-data
	ENV APACHE_LOG_DIR /var/log/apache2
	ENV APACHE_PID_FILE /var/run/apache2.pid
	ENV APACHE_RUN_DIR /var/run/apache2
	ENV APACHE_LOCK_DIR /var/lock/apache2

	# criacao de diretorios utilizados pelo apache
	#
	RUN mkdir -p $APACHE_RUN_DIR $APACHE_LOCK_DIR $APACHE_LOG_DIR

	# sera exportado a porta 8080 do container
	#
	EXPOSE 8080

	# ativacao do apache em modo backgroud
	#
	CMD /usr/sbin/apache2 -D FOREGROUND

CONSTRUINDO O CONTAINER
#
# construindo o container baseado no dockerfile
#
$ docker image build --no-cache -t abreuferr/exemploX:1.0 .	; sera descartado o cache local
$ docker image build -t abreuferr/exemploX:1.0 .	; sera levado em consideracao o cache local

DOCKERHUB
#
# o dockerhub eh um repositorio publico/privado de armazenamento de uma imagem
# docker localizado na internet.

# login Dockerhub
#
$ docker login
	Username: abreuferr
	Password: *********
	Login Succeeded

# login no http://hub.docker.com
#
$ docker login -u <docker-registry-username>

# enviado a imagem para Dockerhub
#
$ docker image push abreuferr/exemploX:1.0

# fazendo o download
#
$ docker container run -d -p 80:80 abreuferr/exemploX:1.0
